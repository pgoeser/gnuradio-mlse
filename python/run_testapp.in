#!/bin/sh

# This script uses the PYTHONPATH manipulation from run_tests to run the
# testapp, which can output plots.
#
# Usage: run_testapp [plot_type]
# See testapp.py at the bottom for plot types.


# build tree == src tree unless you're doing a VPATH build.  
# If you don't know what a VPATH build is, you're not doing one.  Relax...

prefix=@prefix@
exec_prefix=@exec_prefix@

# Where to look in the build tree for our shared library
libbld=@abs_top_builddir@/lib
# Where to look in the build tree for swig generated python code
libswig=@abs_top_builddir@/swig
# Where to look in the src tree for hand written python code
py=@abs_top_srcdir@/python
# Where to look in the src tree for grc python code
grc=@abs_top_srcdir@/grc


# Where to look for installed GNU Radio python modules
# FIXME this is wrong on a distcheck.  We really need to ask gnuradio-core
# where it put its python files.
installed_pythondir=@pythondir@
installed_pyexecdir=@pyexecdir@

PYTHONPATH="$libbld:$libbld/.libs:$libswig:$libswig/.libs:$py:$grc:$installed_pythondir:$installed_pyexecdir:$PYTHONPATH"
echo $PYTHONPATH

export PYTHONPATH

case "@host_os@" in
  darwin*)
    # FIXME: Code for Darwin guessed but not tested
    # Special Code for executing on Darwin / Mac OS X only
    if [ "$DYLD_LIBRARY_PATH" = "" ]
    then
	DYLD_LIBRARY_PATH=$libbld/.libs
    else
	DYLD_LIBRARY_PATH=$libbld/.libs:$DYLD_LIBRARY_PATH
    fi
    export DYLD_LIBRARY_PATH
    ;;
  cygwin*|win*|mingw*)
    # Special Code for executing on Win32 variants only
    if [ "$PATH" = "" ]
    then
	PATH=$libbld/.libs
    else
	PATH=$libbld/.libs:$PATH
    fi
    export PATH
    ;;
esac

cd $py
(python testapp.py "$@" ; echo $? >testapp_exitcode)  3>&1 1>&2 2>&3 | tail -n 100 >testapp_errors
if [ `cat testapp_exitcode` != 0 ]; then
    echo "Testapp was unsuccessful. Following are the last 100 lines from stderr:"
    echo "======================================================================"
    cat testapp_errors
fi
